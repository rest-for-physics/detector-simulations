<?xml version="1.0" encoding="UTF-8" standalone="no" ?>

<!--This file is an example of REST simulation functionality. We process the output root file 
from restG4, converting its TRestG4Event to TRestSignalEvent. Observables and processes's 
internal values are saved.
-->

<TRestManager name="RESTManagerSim" title="Template manager to process a simulation generated by restG4.">


  <globals>
    <parameter name="verboseLevel" value="essential" /> %options are : silent(0), essential(1), info(2), debug(3), extreme(4)
	<parameter name="mainDataPath" value="${HOME}/restData/" />
  </globals>

  <TRestRun name="Run metadata" title="REST Metadata run info (template)" verboseLevel="info">
    <parameter name="experiment" value="BabyIAXO"/>
    <parameter name="runType" value="simulation"/>
    <parameter name="runNumber" value="auto"/> //it will find next run number from database when we use "auto"
    <parameter name="runTag" value="preserve"/>
    <parameter name="runDescription" value="Creating primary and deposited energies in analysis tree"/>
    <parameter name="user" value="${USER}"/>
    <parameter name="outputFile" value="Analysis_[fRunNumber]_[fRunTag].root" />

  </TRestRun>


  <TRestProcessRunner name="TemplateEventProcess" verboseLevel="info">
    <parameter name="eventsToProcess" value="1000000" />
    <parameter name="threadNumber" value="2"/>

    <parameter name="inputAnalysis" value="off"/>
    <parameter name="inputEvent" value="off"/>
    <parameter name="outputEvent" value="off"/>

    // observable = all will add all NON `custom` observables 
    <addProcess type="TRestGeant4AnalysisProcess" name="g4Ana" value="ON" >
        <observable name="energyPrimary" value="ON" />
        <observable name="totalEdep" value="ON" />
    </addProcess>

  </TRestProcessRunner>
  
  <addTask type="processEvents" value="ON" />


</TRestManager>


<!--paramater here is accessible to all the classes-->


